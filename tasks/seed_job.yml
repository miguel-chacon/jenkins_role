---

- name: Jenkins | Create seed Job
  jenkins_job:
    config: "{{ lookup('template', '{{ jenkins_seed_job_config_file }}') }}"
    name: "{{ jenkins_seed_job_name }}"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"

- name: Jenkins | Ensure workspace exists
  file:
    path: "{{ jenkins_home_path }}/jobs/{{ jenkins_seed_job_name }}/workspace"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"

- name: Jenkins | Ensure DSL directory structure exists
  file:
    path: "{{ jenkins_home_path }}/jobs/{{ jenkins_seed_job_name }}/workspace/{{ item.path }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
  with_filetree:
    - "{{ jenkins_seed_job_files_path }}"
    - "{{ jenkins_seed_job_templates_path }}"
  when: item.state == 'directory'

- name: Jenkins | Copy DSL files
  copy:
    src: "{{ item.src }}"
    dest: "{{ jenkins_home_path }}/jobs/{{ jenkins_seed_job_name }}/workspace/{{ item.path }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
  with_filetree: "{{ jenkins_seed_job_files_path }}"
  when: item.state == 'file'

- name: Jenkins | Copy DSL templates
  template:
    src: "{{ item.src }}"
    dest: "{{ jenkins_home_path }}/jobs/{{ jenkins_seed_job_name }}/workspace/{{ item.path }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
  with_filetree: "{{ jenkins_seed_job_templates_path }}"
  when: item.state == 'file'

- name: Jenkins | DSL templates loaded
  find:
    paths:
      - "{{ jenkins_seed_job_files_path }}"
      - "{{ jenkins_seed_job_templates_path }}"
    file_type: file
    recurse: yes
  delegate_to: localhost
  become: no
  register: dsl_files_loaded

- name: Jenkins | Set dsl files var
  set_fact:
    dsl_files:
      "{{ dsl_files_loaded.files |map(attribute='path') | list | regex_replace(jenkins_seed_job_files_path) | regex_replace(jenkins_seed_job_templates_path) }}"

- name: Jenkins | List all files in path
  find:
    paths: "{{ jenkins_home_path }}/jobs/{{ jenkins_seed_job_name }}/workspace/"
    file_type: file
    recurse: yes
  register: all_dsl_available

- name: Jenkins | Set dsl files existing
  set_fact:
    dsl_files_exist:
      "{{ all_dsl_available.files | map(attribute='path') | list | regex_replace(jenkins_home_path + '/jobs/' + jenkins_seed_job_name + '/workspace/') }}"

- name: Jenkins | Remove old dsl files
  file:
    path: "{{ jenkins_home_path }}/jobs/{{ jenkins_seed_job_name }}/workspace/{{ item }}"
    state: absent
  with_items:
    - "{{ dsl_files_exist | difference(dsl_files) }}"

- name: Jenkins | Generate crumb
  uri:
    url: "{{ jenkins_url }}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    return_content: yes
  register: crumb_seed
  when: jenkins_crumb_enabled == 'true'

- name: Jenkins | Parse crumb value
  set_fact:
    crumb_seed_value: "{{ crumb_seed.content.split(':')[1] }}"
  when: jenkins_crumb_enabled == 'true'

- name: Jenkins | Build seed job
  uri:
    url: "{{ jenkins_url }}/job/{{ jenkins_seed_job_name }}/build"
    method: POST
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    status_code: 201
    headers:
      Jenkins-Crumb: "{{ crumb_seed_value | default(omit) }}"
